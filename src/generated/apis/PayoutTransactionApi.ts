// tslint:disable
/**
 * MF KESSAI API v2
 * MF KESSAI REST API
 *
 * The version of the OpenAPI document: 2.3.1
 * Contact: api.support@mfkessai.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    PayoutTransaction,
    PayoutTransactionsList,
} from '../models';

export interface GetPayoutTransactionRequest {
    payoutTransactionId: string;
}

export interface GetPayoutTransactionsListRequest {
    payoutId?: string;
    after?: string;
    before?: string;
    limit?: number;
}

/**
 * no description
 */
export class PayoutTransactionApi extends BaseAPI {

    /**
     * 債権取得
     */
    getPayoutTransaction = ({ payoutTransactionId }: GetPayoutTransactionRequest): Observable<PayoutTransaction> => {
        throwIfNullOrUndefined(payoutTransactionId, 'getPayoutTransaction');

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'apikey': this.configuration.apiKey('apikey') }), // apikey authentication
        };

        return this.request<PayoutTransaction>({
            path: '/payout_transactions/{payout_transaction_id}'.replace('{payout_transaction_id}', encodeURI(payoutTransactionId)),
            method: 'GET',
            headers,
        });
    };

    /**
     * 債権一覧取得
     */
    getPayoutTransactionsList = ({ payoutId, after, before, limit }: GetPayoutTransactionsListRequest): Observable<PayoutTransactionsList> => {

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'apikey': this.configuration.apiKey('apikey') }), // apikey authentication
        };

        const query: HttpQuery = {};

        if (payoutId != null) { query['payout_id'] = payoutId; }
        if (after != null) { query['after'] = after; }
        if (before != null) { query['before'] = before; }
        if (limit != null) { query['limit'] = limit; }

        return this.request<PayoutTransactionsList>({
            path: '/payout_transactions',
            method: 'GET',
            headers,
            query,
        });
    };

}
