// tslint:disable
/**
 * MF KESSAI API v2
 * MF KESSAI REST API
 *
 * The version of the OpenAPI document: 2.3.1
 * Contact: api.support@mfkessai.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI } from '../runtime';
import {
    CustomerExamination,
    CustomerExaminationPayload,
    CustomerExaminationsList,
} from '../models';

export interface CreateCustomerExaminationRequest {
    payload: CustomerExaminationPayload;
}

export interface GetCustomerExaminationRequest {
    customerExaminationId: string;
}

export interface GetCustomerExaminationsListRequest {
    customerId?: string;
    customerNumber?: string;
    status?: GetCustomerExaminationsListStatusEnum;
    createdAtFrom?: Date;
    createdAtTo?: Date;
    after?: string;
    before?: string;
    limit?: number;
}

/**
 * no description
 */
export class CustomerExaminationApi extends BaseAPI {

    /**
     * 顧客審査申請
     * 顧客を指定して顧客審査を申請することができます。最長で申請後2営業日以内に審査いたします。<br> Sandbox環境では動作テストのため、任意の審査結果を指定することができます。[マジックナンバーを利用した審査結果の操作](#environment_magic_number)を参照してください。
     */
    createCustomerExamination = ({ payload }: CreateCustomerExaminationRequest): Observable<CustomerExamination> => {
        throwIfNullOrUndefined(payload, 'createCustomerExamination');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.apiKey && { 'apikey': this.configuration.apiKey('apikey') }), // apikey authentication
        };

        return this.request<CustomerExamination>({
            path: '/customer_examinations',
            method: 'POST',
            headers,
            body: payload,
        });
    };

    /**
     * 顧客審査取得
     * 顧客審査IDを指定して対象顧客審査１件を取得することができます。
     */
    getCustomerExamination = ({ customerExaminationId }: GetCustomerExaminationRequest): Observable<CustomerExamination> => {
        throwIfNullOrUndefined(customerExaminationId, 'getCustomerExamination');

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'apikey': this.configuration.apiKey('apikey') }), // apikey authentication
        };

        return this.request<CustomerExamination>({
            path: '/customer_examinations/{customer_examination_id}'.replace('{customer_examination_id}', encodeURI(customerExaminationId)),
            method: 'GET',
            headers,
        });
    };

    /**
     * 顧客審査一覧取得
     * 顧客審査の一覧を取得します。顧客IDやステータスで絞り込んで取得することもできます。
     */
    getCustomerExaminationsList = ({ customerId, customerNumber, status, createdAtFrom, createdAtTo, after, before, limit }: GetCustomerExaminationsListRequest): Observable<CustomerExaminationsList> => {

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'apikey': this.configuration.apiKey('apikey') }), // apikey authentication
        };

        const query: HttpQuery = {};

        if (customerId != null) { query['customer_id'] = customerId; }
        if (customerNumber != null) { query['customer_number'] = customerNumber; }
        if (status != null) { query['status'] = status; }
        if (createdAtFrom != null) { query['created_at_from'] = (createdAtFrom as any).toISOString(); }
        if (createdAtTo != null) { query['created_at_to'] = (createdAtTo as any).toISOString(); }
        if (after != null) { query['after'] = after; }
        if (before != null) { query['before'] = before; }
        if (limit != null) { query['limit'] = limit; }

        return this.request<CustomerExaminationsList>({
            path: '/customer_examinations',
            method: 'GET',
            headers,
            query,
        });
    };

}

/**
 * @export
 * @enum {string}
 */
export enum GetCustomerExaminationsListStatusEnum {
    Passed = 'passed',
    Rejected = 'rejected',
    Unexamined = 'unexamined'
}
