// tslint:disable
/**
 * MF KESSAI API v2
 * MF KESSAI REST API
 *
 * The version of the OpenAPI document: 2.3.1
 * Contact: api.support@mfkessai.co.jp
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    AmountPerTaxRateType,
    BillingUnpaid,
    InvoiceDeliveryMethod,
} from './index';

/**
 * 請求です。取引のうち、請求先・支払期限・請求書発行日・取引登録方式が同一の取引が同じ請求にまとめられます。
 * @export
 * @interface Billing
 */
export interface Billing {
    /**
     * 請求の**税込**の合計金額です。請求に含まれる取引金額の合計です。
     * @type {number}
     * @memberof Billing
     */
    amount?: number;
    /**
     * 各税率種別毎の**税込**の合計金額です。各税率種別の取引金額を合計した値に各税率を乗じた値になっています。
     * @type {Array<AmountPerTaxRateType>}
     * @memberof Billing
     */
    amountsPerTaxRateType?: Array<AmountPerTaxRateType>;
    /**
     * 顧客IDです。請求の顧客を示します。
     * @type {string}
     * @memberof Billing
     */
    customerId?: string;
    /**
     * 請求先IDです。請求先を示します。
     * @type {string}
     * @memberof Billing
     */
    destinationId?: string;
    /**
     * 支払期限です。
     * @type {Date}
     * @memberof Billing
     */
    dueDate?: Date;
    /**
     * 請求IDです。一意の識別子として自動で付与されます。請求先ID・支払期限・請求書発行日・取引登録方式が同一の取引がこの請求によってまとめられます。請求書は請求をもとに発行されます。
     * @type {string}
     * @memberof Billing
     */
    id?: string;
    /**
     * 請求書送付方法です。郵送(posting) またはメール送付(email)のうちから少なくとも１つを指定してください。どちらも選択された場合、どちらの方法でも送付されます。 また、各取引で指定しなかった送付方法でも、請求にまとまった取引のうちでその送付方法を選択しているものがあれば、そちらの送付方法も採用されます。
     * @type {Array<InvoiceDeliveryMethod>}
     * @memberof Billing
     */
    invoiceDeliveryMethods?: Array<InvoiceDeliveryMethod>;
    /**
     * 請求書発行日です。請求書が発行される日付を指定します。指定した日付が営業日でない場合は翌営業日になります。また、請求書送付日については[こちら](https://support.mfkessai.co.jp/hc/ja/articles/360012259673-%E8%AB%8B%E6%B1%82%E6%9B%B8%E7%99%BA%E8%A1%8C%E6%97%A5)をご参照ください。
     * @type {Date}
     * @memberof Billing
     */
    issueDate?: Date;
    /**
     * このObjectの種別を示します。ここでは必ず`billing`が入ります。
     * @type {string}
     * @memberof Billing
     */
    object?: BillingModelObjectEnum;
    /**
     * 請求ステータスです。請求予定(`scheduled`)、請求書発行済(`invoice_issued`) 、口座振替通知済(`account_transfer_notified`)で指定されます。
     * @type {string}
     * @memberof Billing
     */
    status?: BillingStatusEnum;
    /**
     * @type {BillingUnpaid}
     * @memberof Billing
     */
    unpaid?: BillingUnpaid;
    /**
     * 請求URIです。すべてのリソースで一意の識別子として自動で付与されます。
     * @type {string}
     * @memberof Billing
     */
    uri?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum BillingModelObjectEnum {
    Billing = 'billing'
}
/**
 * @export
 * @enum {string}
 */
export enum BillingStatusEnum {
    Scheduled = 'scheduled',
    InvoiceIssued = 'invoice_issued',
    AccountTransferNotified = 'account_transfer_notified'
}

